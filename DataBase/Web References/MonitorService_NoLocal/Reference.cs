//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace DataBase.MonitorService_NoLocal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MonitorService_NoLocalSoap", Namespace="http://www.farshine.com/")]
    public partial class MonitorService_NoLocal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CheckBarCodeTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCardTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBoxLetterCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback BoxLetterViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnitListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserBoxInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback Box_UnitChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveErratumLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback Box_UserGetLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeaderOutMessageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MonitorService_NoLocal() {
            this.Url = global::DataBase.Properties.Settings.Default.DataBase_MonitorService_NoLocal_MonitorService_NoLocal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CheckBarCodeTypeCompletedEventHandler CheckBarCodeTypeCompleted;
        
        /// <remarks/>
        public event CheckCardTypeCompletedEventHandler CheckCardTypeCompleted;
        
        /// <remarks/>
        public event GetBoxLetterCountCompletedEventHandler GetBoxLetterCountCompleted;
        
        /// <remarks/>
        public event BoxLetterViewCompletedEventHandler BoxLetterViewCompleted;
        
        /// <remarks/>
        public event UnitListCompletedEventHandler UnitListCompleted;
        
        /// <remarks/>
        public event CheckLoginCompletedEventHandler CheckLoginCompleted;
        
        /// <remarks/>
        public event UserBoxInfoCompletedEventHandler UserBoxInfoCompleted;
        
        /// <remarks/>
        public event Box_UnitChangeCompletedEventHandler Box_UnitChangeCompleted;
        
        /// <remarks/>
        public event SaveLetterCompletedEventHandler SaveLetterCompleted;
        
        /// <remarks/>
        public event SaveErratumLetterCompletedEventHandler SaveErratumLetterCompleted;
        
        /// <remarks/>
        public event Box_UserGetLetterCompletedEventHandler Box_UserGetLetterCompleted;
        
        /// <remarks/>
        public event GetLeaderOutMessageCompletedEventHandler GetLeaderOutMessageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.farshine.com/CheckBarCodeType", RequestNamespace="http://www.farshine.com/", ResponseNamespace="http://www.farshine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckBarCodeType(string BarCode, ref string BoxNOs) {
            object[] results = this.Invoke("CheckBarCodeType", new object[] {
                        BarCode,
                        BoxNOs});
            BoxNOs = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckBarCodeTypeAsync(string BarCode, string BoxNOs) {
            this.CheckBarCodeTypeAsync(BarCode, BoxNOs, null);
        }
        
        /// <remarks/>
        public void CheckBarCodeTypeAsync(string BarCode, string BoxNOs, object userState) {
            if ((this.CheckBarCodeTypeOperationCompleted == null)) {
                this.CheckBarCodeTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckBarCodeTypeOperationCompleted);
            }
            this.InvokeAsync("CheckBarCodeType", new object[] {
                        BarCode,
                        BoxNOs}, this.CheckBarCodeTypeOperationCompleted, userState);
        }
        
        private void OnCheckBarCodeTypeOperationCompleted(object arg) {
            if ((this.CheckBarCodeTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckBarCodeTypeCompleted(this, new CheckBarCodeTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.farshine.com/CheckCardType", RequestNamespace="http://www.farshine.com/", ResponseNamespace="http://www.farshine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckCardType(string CardCode, ref string BoxNOs, out string UnitName, out string UserName) {
            object[] results = this.Invoke("CheckCardType", new object[] {
                        CardCode,
                        BoxNOs});
            BoxNOs = ((string)(results[1]));
            UnitName = ((string)(results[2]));
            UserName = ((string)(results[3]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCardTypeAsync(string CardCode, string BoxNOs) {
            this.CheckCardTypeAsync(CardCode, BoxNOs, null);
        }
        
        /// <remarks/>
        public void CheckCardTypeAsync(string CardCode, string BoxNOs, object userState) {
            if ((this.CheckCardTypeOperationCompleted == null)) {
                this.CheckCardTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCardTypeOperationCompleted);
            }
            this.InvokeAsync("CheckCardType", new object[] {
                        CardCode,
                        BoxNOs}, this.CheckCardTypeOperationCompleted, userState);
        }
        
        private void OnCheckCardTypeOperationCompleted(object arg) {
            if ((this.CheckCardTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCardTypeCompleted(this, new CheckCardTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.farshine.com/GetBoxLetterCount", RequestNamespace="http://www.farshine.com/", ResponseNamespace="http://www.farshine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BoxInfo GetBoxLetterCount(int BoxId) {
            object[] results = this.Invoke("GetBoxLetterCount", new object[] {
                        BoxId});
            return ((BoxInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetBoxLetterCountAsync(int BoxId) {
            this.GetBoxLetterCountAsync(BoxId, null);
        }
        
        /// <remarks/>
        public void GetBoxLetterCountAsync(int BoxId, object userState) {
            if ((this.GetBoxLetterCountOperationCompleted == null)) {
                this.GetBoxLetterCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBoxLetterCountOperationCompleted);
            }
            this.InvokeAsync("GetBoxLetterCount", new object[] {
                        BoxId}, this.GetBoxLetterCountOperationCompleted, userState);
        }
        
        private void OnGetBoxLetterCountOperationCompleted(object arg) {
            if ((this.GetBoxLetterCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBoxLetterCountCompleted(this, new GetBoxLetterCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.farshine.com/BoxLetterView", RequestNamespace="http://www.farshine.com/", ResponseNamespace="http://www.farshine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet BoxLetterView(string BoxNO) {
            object[] results = this.Invoke("BoxLetterView", new object[] {
                        BoxNO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void BoxLetterViewAsync(string BoxNO) {
            this.BoxLetterViewAsync(BoxNO, null);
        }
        
        /// <remarks/>
        public void BoxLetterViewAsync(string BoxNO, object userState) {
            if ((this.BoxLetterViewOperationCompleted == null)) {
                this.BoxLetterViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBoxLetterViewOperationCompleted);
            }
            this.InvokeAsync("BoxLetterView", new object[] {
                        BoxNO}, this.BoxLetterViewOperationCompleted, userState);
        }
        
        private void OnBoxLetterViewOperationCompleted(object arg) {
            if ((this.BoxLetterViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BoxLetterViewCompleted(this, new BoxLetterViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.farshine.com/UnitList", RequestNamespace="http://www.farshine.com/", ResponseNamespace="http://www.farshine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UnitList() {
            object[] results = this.Invoke("UnitList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UnitListAsync() {
            this.UnitListAsync(null);
        }
        
        /// <remarks/>
        public void UnitListAsync(object userState) {
            if ((this.UnitListOperationCompleted == null)) {
                this.UnitListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnitListOperationCompleted);
            }
            this.InvokeAsync("UnitList", new object[0], this.UnitListOperationCompleted, userState);
        }
        
        private void OnUnitListOperationCompleted(object arg) {
            if ((this.UnitListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnitListCompleted(this, new UnitListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.farshine.com/CheckLogin", RequestNamespace="http://www.farshine.com/", ResponseNamespace="http://www.farshine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckLogin(string UserName, string pwd) {
            object[] results = this.Invoke("CheckLogin", new object[] {
                        UserName,
                        pwd});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckLoginAsync(string UserName, string pwd) {
            this.CheckLoginAsync(UserName, pwd, null);
        }
        
        /// <remarks/>
        public void CheckLoginAsync(string UserName, string pwd, object userState) {
            if ((this.CheckLoginOperationCompleted == null)) {
                this.CheckLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckLoginOperationCompleted);
            }
            this.InvokeAsync("CheckLogin", new object[] {
                        UserName,
                        pwd}, this.CheckLoginOperationCompleted, userState);
        }
        
        private void OnCheckLoginOperationCompleted(object arg) {
            if ((this.CheckLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckLoginCompleted(this, new CheckLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.farshine.com/UserBoxInfo", RequestNamespace="http://www.farshine.com/", ResponseNamespace="http://www.farshine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UserBoxInfo(string UserName) {
            object[] results = this.Invoke("UserBoxInfo", new object[] {
                        UserName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UserBoxInfoAsync(string UserName) {
            this.UserBoxInfoAsync(UserName, null);
        }
        
        /// <remarks/>
        public void UserBoxInfoAsync(string UserName, object userState) {
            if ((this.UserBoxInfoOperationCompleted == null)) {
                this.UserBoxInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserBoxInfoOperationCompleted);
            }
            this.InvokeAsync("UserBoxInfo", new object[] {
                        UserName}, this.UserBoxInfoOperationCompleted, userState);
        }
        
        private void OnUserBoxInfoOperationCompleted(object arg) {
            if ((this.UserBoxInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserBoxInfoCompleted(this, new UserBoxInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.farshine.com/Box_UnitChange", RequestNamespace="http://www.farshine.com/", ResponseNamespace="http://www.farshine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Box_UnitChange(int BoxID, string UnitBH) {
            object[] results = this.Invoke("Box_UnitChange", new object[] {
                        BoxID,
                        UnitBH});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Box_UnitChangeAsync(int BoxID, string UnitBH) {
            this.Box_UnitChangeAsync(BoxID, UnitBH, null);
        }
        
        /// <remarks/>
        public void Box_UnitChangeAsync(int BoxID, string UnitBH, object userState) {
            if ((this.Box_UnitChangeOperationCompleted == null)) {
                this.Box_UnitChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBox_UnitChangeOperationCompleted);
            }
            this.InvokeAsync("Box_UnitChange", new object[] {
                        BoxID,
                        UnitBH}, this.Box_UnitChangeOperationCompleted, userState);
        }
        
        private void OnBox_UnitChangeOperationCompleted(object arg) {
            if ((this.Box_UnitChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Box_UnitChangeCompleted(this, new Box_UnitChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.farshine.com/SaveLetter", RequestNamespace="http://www.farshine.com/", ResponseNamespace="http://www.farshine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveLetter(string LetterCode, int BoxID, int SendFenShu, bool bUragent) {
            object[] results = this.Invoke("SaveLetter", new object[] {
                        LetterCode,
                        BoxID,
                        SendFenShu,
                        bUragent});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveLetterAsync(string LetterCode, int BoxID, int SendFenShu, bool bUragent) {
            this.SaveLetterAsync(LetterCode, BoxID, SendFenShu, bUragent, null);
        }
        
        /// <remarks/>
        public void SaveLetterAsync(string LetterCode, int BoxID, int SendFenShu, bool bUragent, object userState) {
            if ((this.SaveLetterOperationCompleted == null)) {
                this.SaveLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveLetterOperationCompleted);
            }
            this.InvokeAsync("SaveLetter", new object[] {
                        LetterCode,
                        BoxID,
                        SendFenShu,
                        bUragent}, this.SaveLetterOperationCompleted, userState);
        }
        
        private void OnSaveLetterOperationCompleted(object arg) {
            if ((this.SaveLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveLetterCompleted(this, new SaveLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.farshine.com/SaveErratumLetter", RequestNamespace="http://www.farshine.com/", ResponseNamespace="http://www.farshine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveErratumLetter(int BoxID, string LetterCode, string AdminCardCode, string UserCardCode) {
            object[] results = this.Invoke("SaveErratumLetter", new object[] {
                        BoxID,
                        LetterCode,
                        AdminCardCode,
                        UserCardCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveErratumLetterAsync(int BoxID, string LetterCode, string AdminCardCode, string UserCardCode) {
            this.SaveErratumLetterAsync(BoxID, LetterCode, AdminCardCode, UserCardCode, null);
        }
        
        /// <remarks/>
        public void SaveErratumLetterAsync(int BoxID, string LetterCode, string AdminCardCode, string UserCardCode, object userState) {
            if ((this.SaveErratumLetterOperationCompleted == null)) {
                this.SaveErratumLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveErratumLetterOperationCompleted);
            }
            this.InvokeAsync("SaveErratumLetter", new object[] {
                        BoxID,
                        LetterCode,
                        AdminCardCode,
                        UserCardCode}, this.SaveErratumLetterOperationCompleted, userState);
        }
        
        private void OnSaveErratumLetterOperationCompleted(object arg) {
            if ((this.SaveErratumLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveErratumLetterCompleted(this, new SaveErratumLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.farshine.com/Box_UserGetLetter", RequestNamespace="http://www.farshine.com/", ResponseNamespace="http://www.farshine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Box_UserGetLetter(int BoxID, string UserCardCode, bool bSendReport, bool bRecvReport) {
            object[] results = this.Invoke("Box_UserGetLetter", new object[] {
                        BoxID,
                        UserCardCode,
                        bSendReport,
                        bRecvReport});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Box_UserGetLetterAsync(int BoxID, string UserCardCode, bool bSendReport, bool bRecvReport) {
            this.Box_UserGetLetterAsync(BoxID, UserCardCode, bSendReport, bRecvReport, null);
        }
        
        /// <remarks/>
        public void Box_UserGetLetterAsync(int BoxID, string UserCardCode, bool bSendReport, bool bRecvReport, object userState) {
            if ((this.Box_UserGetLetterOperationCompleted == null)) {
                this.Box_UserGetLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBox_UserGetLetterOperationCompleted);
            }
            this.InvokeAsync("Box_UserGetLetter", new object[] {
                        BoxID,
                        UserCardCode,
                        bSendReport,
                        bRecvReport}, this.Box_UserGetLetterOperationCompleted, userState);
        }
        
        private void OnBox_UserGetLetterOperationCompleted(object arg) {
            if ((this.Box_UserGetLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Box_UserGetLetterCompleted(this, new Box_UserGetLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.farshine.com/GetLeaderOutMessage", RequestNamespace="http://www.farshine.com/", ResponseNamespace="http://www.farshine.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ClassBoxShowMessage[] GetLeaderOutMessage() {
            object[] results = this.Invoke("GetLeaderOutMessage", new object[0]);
            return ((ClassBoxShowMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLeaderOutMessageAsync() {
            this.GetLeaderOutMessageAsync(null);
        }
        
        /// <remarks/>
        public void GetLeaderOutMessageAsync(object userState) {
            if ((this.GetLeaderOutMessageOperationCompleted == null)) {
                this.GetLeaderOutMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeaderOutMessageOperationCompleted);
            }
            this.InvokeAsync("GetLeaderOutMessage", new object[0], this.GetLeaderOutMessageOperationCompleted, userState);
        }
        
        private void OnGetLeaderOutMessageOperationCompleted(object arg) {
            if ((this.GetLeaderOutMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeaderOutMessageCompleted(this, new GetLeaderOutMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.farshine.com/")]
    public partial class BoxInfo {
        
        private int boxNOField;
        
        private string unitCodeField;
        
        private string boxShowNameField;
        
        private string boxShowFullNameField;
        
        private bool isQingTuiXiangField;
        
        private int sendCountField;
        
        private bool hasJiJianField;
        
        private int dengJiCountField;
        
        private int dengJiJJCountField;
        
        private int boxPropertyField;
        
        /// <remarks/>
        public int BoxNO {
            get {
                return this.boxNOField;
            }
            set {
                this.boxNOField = value;
            }
        }
        
        /// <remarks/>
        public string UnitCode {
            get {
                return this.unitCodeField;
            }
            set {
                this.unitCodeField = value;
            }
        }
        
        /// <remarks/>
        public string BoxShowName {
            get {
                return this.boxShowNameField;
            }
            set {
                this.boxShowNameField = value;
            }
        }
        
        /// <remarks/>
        public string BoxShowFullName {
            get {
                return this.boxShowFullNameField;
            }
            set {
                this.boxShowFullNameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsQingTuiXiang {
            get {
                return this.isQingTuiXiangField;
            }
            set {
                this.isQingTuiXiangField = value;
            }
        }
        
        /// <remarks/>
        public int SendCount {
            get {
                return this.sendCountField;
            }
            set {
                this.sendCountField = value;
            }
        }
        
        /// <remarks/>
        public bool HasJiJian {
            get {
                return this.hasJiJianField;
            }
            set {
                this.hasJiJianField = value;
            }
        }
        
        /// <remarks/>
        public int DengJiCount {
            get {
                return this.dengJiCountField;
            }
            set {
                this.dengJiCountField = value;
            }
        }
        
        /// <remarks/>
        public int DengJiJJCount {
            get {
                return this.dengJiJJCountField;
            }
            set {
                this.dengJiJJCountField = value;
            }
        }
        
        /// <remarks/>
        public int BoxProperty {
            get {
                return this.boxPropertyField;
            }
            set {
                this.boxPropertyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2046.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.farshine.com/")]
    public partial class ClassBoxShowMessage {
        
        private int 逻辑箱号Field;
        
        private string 出差信息Field;
        
        /// <remarks/>
        public int 逻辑箱号 {
            get {
                return this.逻辑箱号Field;
            }
            set {
                this.逻辑箱号Field = value;
            }
        }
        
        /// <remarks/>
        public string 出差信息 {
            get {
                return this.出差信息Field;
            }
            set {
                this.出差信息Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CheckBarCodeTypeCompletedEventHandler(object sender, CheckBarCodeTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckBarCodeTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckBarCodeTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string BoxNOs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CheckCardTypeCompletedEventHandler(object sender, CheckCardTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCardTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCardTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string BoxNOs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string UnitName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetBoxLetterCountCompletedEventHandler(object sender, GetBoxLetterCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBoxLetterCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBoxLetterCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BoxInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BoxInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void BoxLetterViewCompletedEventHandler(object sender, BoxLetterViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BoxLetterViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BoxLetterViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UnitListCompletedEventHandler(object sender, UnitListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnitListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnitListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CheckLoginCompletedEventHandler(object sender, CheckLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UserBoxInfoCompletedEventHandler(object sender, UserBoxInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserBoxInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserBoxInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void Box_UnitChangeCompletedEventHandler(object sender, Box_UnitChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Box_UnitChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Box_UnitChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SaveLetterCompletedEventHandler(object sender, SaveLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void SaveErratumLetterCompletedEventHandler(object sender, SaveErratumLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveErratumLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveErratumLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void Box_UserGetLetterCompletedEventHandler(object sender, Box_UserGetLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Box_UserGetLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Box_UserGetLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GetLeaderOutMessageCompletedEventHandler(object sender, GetLeaderOutMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeaderOutMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeaderOutMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClassBoxShowMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClassBoxShowMessage[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591