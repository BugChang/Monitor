//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DataBase {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("LocalDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class LocalDataSet : global::System.Data.DataSet {
        
        private 预发表DataTable table预发表;
        
        private 范围表DataTable table范围表;
        
        private 证卡列表DataTable table证卡列表;
        
        private 规则策略DataTable table规则策略;
        
        private 箱格信息DataTable table箱格信息;
        
        private 用户取件表DataTable table用户取件表;
        
        private 提示信息DataTable table提示信息;
        
        private global::System.Data.DataRelation relationFK_范围表_预发表;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LocalDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected LocalDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["预发表"] != null)) {
                    base.Tables.Add(new 预发表DataTable(ds.Tables["预发表"]));
                }
                if ((ds.Tables["范围表"] != null)) {
                    base.Tables.Add(new 范围表DataTable(ds.Tables["范围表"]));
                }
                if ((ds.Tables["证卡列表"] != null)) {
                    base.Tables.Add(new 证卡列表DataTable(ds.Tables["证卡列表"]));
                }
                if ((ds.Tables["规则策略"] != null)) {
                    base.Tables.Add(new 规则策略DataTable(ds.Tables["规则策略"]));
                }
                if ((ds.Tables["箱格信息"] != null)) {
                    base.Tables.Add(new 箱格信息DataTable(ds.Tables["箱格信息"]));
                }
                if ((ds.Tables["用户取件表"] != null)) {
                    base.Tables.Add(new 用户取件表DataTable(ds.Tables["用户取件表"]));
                }
                if ((ds.Tables["提示信息"] != null)) {
                    base.Tables.Add(new 提示信息DataTable(ds.Tables["提示信息"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 预发表DataTable 预发表 {
            get {
                return this.table预发表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 范围表DataTable 范围表 {
            get {
                return this.table范围表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 证卡列表DataTable 证卡列表 {
            get {
                return this.table证卡列表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 规则策略DataTable 规则策略 {
            get {
                return this.table规则策略;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 箱格信息DataTable 箱格信息 {
            get {
                return this.table箱格信息;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 用户取件表DataTable 用户取件表 {
            get {
                return this.table用户取件表;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 提示信息DataTable 提示信息 {
            get {
                return this.table提示信息;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            LocalDataSet cln = ((LocalDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["预发表"] != null)) {
                    base.Tables.Add(new 预发表DataTable(ds.Tables["预发表"]));
                }
                if ((ds.Tables["范围表"] != null)) {
                    base.Tables.Add(new 范围表DataTable(ds.Tables["范围表"]));
                }
                if ((ds.Tables["证卡列表"] != null)) {
                    base.Tables.Add(new 证卡列表DataTable(ds.Tables["证卡列表"]));
                }
                if ((ds.Tables["规则策略"] != null)) {
                    base.Tables.Add(new 规则策略DataTable(ds.Tables["规则策略"]));
                }
                if ((ds.Tables["箱格信息"] != null)) {
                    base.Tables.Add(new 箱格信息DataTable(ds.Tables["箱格信息"]));
                }
                if ((ds.Tables["用户取件表"] != null)) {
                    base.Tables.Add(new 用户取件表DataTable(ds.Tables["用户取件表"]));
                }
                if ((ds.Tables["提示信息"] != null)) {
                    base.Tables.Add(new 提示信息DataTable(ds.Tables["提示信息"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.table预发表 = ((预发表DataTable)(base.Tables["预发表"]));
            if ((initTable == true)) {
                if ((this.table预发表 != null)) {
                    this.table预发表.InitVars();
                }
            }
            this.table范围表 = ((范围表DataTable)(base.Tables["范围表"]));
            if ((initTable == true)) {
                if ((this.table范围表 != null)) {
                    this.table范围表.InitVars();
                }
            }
            this.table证卡列表 = ((证卡列表DataTable)(base.Tables["证卡列表"]));
            if ((initTable == true)) {
                if ((this.table证卡列表 != null)) {
                    this.table证卡列表.InitVars();
                }
            }
            this.table规则策略 = ((规则策略DataTable)(base.Tables["规则策略"]));
            if ((initTable == true)) {
                if ((this.table规则策略 != null)) {
                    this.table规则策略.InitVars();
                }
            }
            this.table箱格信息 = ((箱格信息DataTable)(base.Tables["箱格信息"]));
            if ((initTable == true)) {
                if ((this.table箱格信息 != null)) {
                    this.table箱格信息.InitVars();
                }
            }
            this.table用户取件表 = ((用户取件表DataTable)(base.Tables["用户取件表"]));
            if ((initTable == true)) {
                if ((this.table用户取件表 != null)) {
                    this.table用户取件表.InitVars();
                }
            }
            this.table提示信息 = ((提示信息DataTable)(base.Tables["提示信息"]));
            if ((initTable == true)) {
                if ((this.table提示信息 != null)) {
                    this.table提示信息.InitVars();
                }
            }
            this.relationFK_范围表_预发表 = this.Relations["FK_范围表_预发表"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "LocalDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/LocalDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table预发表 = new 预发表DataTable();
            base.Tables.Add(this.table预发表);
            this.table范围表 = new 范围表DataTable();
            base.Tables.Add(this.table范围表);
            this.table证卡列表 = new 证卡列表DataTable();
            base.Tables.Add(this.table证卡列表);
            this.table规则策略 = new 规则策略DataTable();
            base.Tables.Add(this.table规则策略);
            this.table箱格信息 = new 箱格信息DataTable();
            base.Tables.Add(this.table箱格信息);
            this.table用户取件表 = new 用户取件表DataTable();
            base.Tables.Add(this.table用户取件表);
            this.table提示信息 = new 提示信息DataTable();
            base.Tables.Add(this.table提示信息);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("FK_范围表_预发表", new global::System.Data.DataColumn[] {
                        this.table预发表.预发标识Column}, new global::System.Data.DataColumn[] {
                        this.table范围表.预发标识Column});
            this.table范围表.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationFK_范围表_预发表 = new global::System.Data.DataRelation("FK_范围表_预发表", new global::System.Data.DataColumn[] {
                        this.table预发表.预发标识Column}, new global::System.Data.DataColumn[] {
                        this.table范围表.预发标识Column}, false);
            this.Relations.Add(this.relationFK_范围表_预发表);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize预发表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize范围表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize证卡列表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize规则策略() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize箱格信息() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize用户取件表() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize提示信息() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            LocalDataSet ds = new LocalDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void 预发表RowChangeEventHandler(object sender, 预发表RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void 范围表RowChangeEventHandler(object sender, 范围表RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void 证卡列表RowChangeEventHandler(object sender, 证卡列表RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void 规则策略RowChangeEventHandler(object sender, 规则策略RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void 箱格信息RowChangeEventHandler(object sender, 箱格信息RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void 用户取件表RowChangeEventHandler(object sender, 用户取件表RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void 提示信息RowChangeEventHandler(object sender, 提示信息RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 预发表DataTable : global::System.Data.TypedTableBase<预发表Row> {
            
            private global::System.Data.DataColumn column是否同步;
            
            private global::System.Data.DataColumn column预发标识;
            
            private global::System.Data.DataColumn column条码编号;
            
            private global::System.Data.DataColumn column条码编号56;
            
            private global::System.Data.DataColumn column完整条码;
            
            private global::System.Data.DataColumn column是否是急件;
            
            private global::System.Data.DataColumn column条码类型;
            
            private global::System.Data.DataColumn column收件箱格号码;
            
            private global::System.Data.DataColumn column份号;
            
            private global::System.Data.DataColumn column预发时间;
            
            private global::System.Data.DataColumn columnDocId;
            
            private global::System.Data.DataColumn column是否删除;
            
            private global::System.Data.DataColumn column投箱状态;
            
            private global::System.Data.DataColumn column投箱时间;
            
            private global::System.Data.DataColumn column手工加急;
            
            private global::System.Data.DataColumn column清退人;
            
            private global::System.Data.DataColumn column录像文件名称;
            
            private global::System.Data.DataColumn column是否勘误;
            
            private global::System.Data.DataColumn column勘误时间;
            
            private global::System.Data.DataColumn column勘误管理员卡号;
            
            private global::System.Data.DataColumn column勘误交换员卡号;
            
            private global::System.Data.DataColumn column取件状态;
            
            private global::System.Data.DataColumn column取件时间;
            
            private global::System.Data.DataColumn column取件人证卡号码;
            
            private global::System.Data.DataColumn column同步错误次数;
            
            private global::System.Data.DataColumn column投箱类型;
            
            private global::System.Data.DataColumn column是否退信;
            
            private global::System.Data.DataColumn column退信管理员证卡编号;
            
            private global::System.Data.DataColumn column分组投箱方式;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 预发表DataTable() {
                this.TableName = "预发表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 预发表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected 预发表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 是否同步Column {
                get {
                    return this.column是否同步;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 预发标识Column {
                get {
                    return this.column预发标识;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 条码编号Column {
                get {
                    return this.column条码编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 条码编号56Column {
                get {
                    return this.column条码编号56;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 完整条码Column {
                get {
                    return this.column完整条码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 是否是急件Column {
                get {
                    return this.column是否是急件;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 条码类型Column {
                get {
                    return this.column条码类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 收件箱格号码Column {
                get {
                    return this.column收件箱格号码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 份号Column {
                get {
                    return this.column份号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 预发时间Column {
                get {
                    return this.column预发时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DocIdColumn {
                get {
                    return this.columnDocId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 是否删除Column {
                get {
                    return this.column是否删除;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 投箱状态Column {
                get {
                    return this.column投箱状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 投箱时间Column {
                get {
                    return this.column投箱时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 手工加急Column {
                get {
                    return this.column手工加急;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 清退人Column {
                get {
                    return this.column清退人;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 录像文件名称Column {
                get {
                    return this.column录像文件名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 是否勘误Column {
                get {
                    return this.column是否勘误;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 勘误时间Column {
                get {
                    return this.column勘误时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 勘误管理员卡号Column {
                get {
                    return this.column勘误管理员卡号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 勘误交换员卡号Column {
                get {
                    return this.column勘误交换员卡号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取件状态Column {
                get {
                    return this.column取件状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取件时间Column {
                get {
                    return this.column取件时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取件人证卡号码Column {
                get {
                    return this.column取件人证卡号码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 同步错误次数Column {
                get {
                    return this.column同步错误次数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 投箱类型Column {
                get {
                    return this.column投箱类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 是否退信Column {
                get {
                    return this.column是否退信;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 退信管理员证卡编号Column {
                get {
                    return this.column退信管理员证卡编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 分组投箱方式Column {
                get {
                    return this.column分组投箱方式;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 预发表Row this[int index] {
                get {
                    return ((预发表Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 预发表RowChangeEventHandler 预发表RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 预发表RowChangeEventHandler 预发表RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 预发表RowChangeEventHandler 预发表RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 预发表RowChangeEventHandler 预发表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add预发表Row(预发表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 预发表Row Add预发表Row(
                        bool 是否同步, 
                        string 预发标识, 
                        string 条码编号, 
                        string 条码编号56, 
                        string 完整条码, 
                        bool 是否是急件, 
                        int 条码类型, 
                        int 收件箱格号码, 
                        string 份号, 
                        string 预发时间, 
                        string DocId, 
                        bool 是否删除, 
                        bool 投箱状态, 
                        System.DateTime 投箱时间, 
                        bool 手工加急, 
                        string 清退人, 
                        string 录像文件名称, 
                        bool 是否勘误, 
                        System.DateTime 勘误时间, 
                        string 勘误管理员卡号, 
                        string 勘误交换员卡号, 
                        bool 取件状态, 
                        System.DateTime 取件时间, 
                        string 取件人证卡号码, 
                        int 同步错误次数, 
                        int 投箱类型, 
                        bool 是否退信, 
                        string 退信管理员证卡编号, 
                        int 分组投箱方式) {
                预发表Row row预发表Row = ((预发表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        是否同步,
                        预发标识,
                        条码编号,
                        条码编号56,
                        完整条码,
                        是否是急件,
                        条码类型,
                        收件箱格号码,
                        份号,
                        预发时间,
                        DocId,
                        是否删除,
                        投箱状态,
                        投箱时间,
                        手工加急,
                        清退人,
                        录像文件名称,
                        是否勘误,
                        勘误时间,
                        勘误管理员卡号,
                        勘误交换员卡号,
                        取件状态,
                        取件时间,
                        取件人证卡号码,
                        同步错误次数,
                        投箱类型,
                        是否退信,
                        退信管理员证卡编号,
                        分组投箱方式};
                row预发表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row预发表Row);
                return row预发表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                预发表DataTable cln = ((预发表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 预发表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column是否同步 = base.Columns["是否同步"];
                this.column预发标识 = base.Columns["预发标识"];
                this.column条码编号 = base.Columns["条码编号"];
                this.column条码编号56 = base.Columns["条码编号56"];
                this.column完整条码 = base.Columns["完整条码"];
                this.column是否是急件 = base.Columns["是否是急件"];
                this.column条码类型 = base.Columns["条码类型"];
                this.column收件箱格号码 = base.Columns["收件箱格号码"];
                this.column份号 = base.Columns["份号"];
                this.column预发时间 = base.Columns["预发时间"];
                this.columnDocId = base.Columns["DocId"];
                this.column是否删除 = base.Columns["是否删除"];
                this.column投箱状态 = base.Columns["投箱状态"];
                this.column投箱时间 = base.Columns["投箱时间"];
                this.column手工加急 = base.Columns["手工加急"];
                this.column清退人 = base.Columns["清退人"];
                this.column录像文件名称 = base.Columns["录像文件名称"];
                this.column是否勘误 = base.Columns["是否勘误"];
                this.column勘误时间 = base.Columns["勘误时间"];
                this.column勘误管理员卡号 = base.Columns["勘误管理员卡号"];
                this.column勘误交换员卡号 = base.Columns["勘误交换员卡号"];
                this.column取件状态 = base.Columns["取件状态"];
                this.column取件时间 = base.Columns["取件时间"];
                this.column取件人证卡号码 = base.Columns["取件人证卡号码"];
                this.column同步错误次数 = base.Columns["同步错误次数"];
                this.column投箱类型 = base.Columns["投箱类型"];
                this.column是否退信 = base.Columns["是否退信"];
                this.column退信管理员证卡编号 = base.Columns["退信管理员证卡编号"];
                this.column分组投箱方式 = base.Columns["分组投箱方式"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column是否同步 = new global::System.Data.DataColumn("是否同步", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否同步);
                this.column预发标识 = new global::System.Data.DataColumn("预发标识", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column预发标识);
                this.column条码编号 = new global::System.Data.DataColumn("条码编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column条码编号);
                this.column条码编号56 = new global::System.Data.DataColumn("条码编号56", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column条码编号56);
                this.column完整条码 = new global::System.Data.DataColumn("完整条码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column完整条码);
                this.column是否是急件 = new global::System.Data.DataColumn("是否是急件", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否是急件);
                this.column条码类型 = new global::System.Data.DataColumn("条码类型", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column条码类型);
                this.column收件箱格号码 = new global::System.Data.DataColumn("收件箱格号码", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column收件箱格号码);
                this.column份号 = new global::System.Data.DataColumn("份号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column份号);
                this.column预发时间 = new global::System.Data.DataColumn("预发时间", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column预发时间);
                this.columnDocId = new global::System.Data.DataColumn("DocId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocId);
                this.column是否删除 = new global::System.Data.DataColumn("是否删除", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否删除);
                this.column投箱状态 = new global::System.Data.DataColumn("投箱状态", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column投箱状态);
                this.column投箱时间 = new global::System.Data.DataColumn("投箱时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column投箱时间);
                this.column手工加急 = new global::System.Data.DataColumn("手工加急", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column手工加急);
                this.column清退人 = new global::System.Data.DataColumn("清退人", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column清退人);
                this.column录像文件名称 = new global::System.Data.DataColumn("录像文件名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column录像文件名称);
                this.column是否勘误 = new global::System.Data.DataColumn("是否勘误", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否勘误);
                this.column勘误时间 = new global::System.Data.DataColumn("勘误时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column勘误时间);
                this.column勘误管理员卡号 = new global::System.Data.DataColumn("勘误管理员卡号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column勘误管理员卡号);
                this.column勘误交换员卡号 = new global::System.Data.DataColumn("勘误交换员卡号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column勘误交换员卡号);
                this.column取件状态 = new global::System.Data.DataColumn("取件状态", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取件状态);
                this.column取件时间 = new global::System.Data.DataColumn("取件时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取件时间);
                this.column取件人证卡号码 = new global::System.Data.DataColumn("取件人证卡号码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取件人证卡号码);
                this.column同步错误次数 = new global::System.Data.DataColumn("同步错误次数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column同步错误次数);
                this.column投箱类型 = new global::System.Data.DataColumn("投箱类型", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column投箱类型);
                this.column是否退信 = new global::System.Data.DataColumn("是否退信", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否退信);
                this.column退信管理员证卡编号 = new global::System.Data.DataColumn("退信管理员证卡编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column退信管理员证卡编号);
                this.column分组投箱方式 = new global::System.Data.DataColumn("分组投箱方式", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分组投箱方式);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column预发标识}, false));
                this.column是否同步.AllowDBNull = false;
                this.column是否同步.DefaultValue = ((bool)(false));
                this.column预发标识.AllowDBNull = false;
                this.column预发标识.Unique = true;
                this.column预发标识.DefaultValue = ((string)(""));
                this.column条码编号.DefaultValue = ((string)(""));
                this.column条码编号56.DefaultValue = ((string)(""));
                this.column完整条码.DefaultValue = ((string)(""));
                this.column是否是急件.AllowDBNull = false;
                this.column是否是急件.DefaultValue = ((bool)(false));
                this.column条码类型.AllowDBNull = false;
                this.column条码类型.DefaultValue = ((int)(0));
                this.column收件箱格号码.AllowDBNull = false;
                this.column收件箱格号码.DefaultValue = ((int)(0));
                this.column份号.DefaultValue = ((string)(""));
                this.column预发时间.DefaultValue = ((string)(""));
                this.columnDocId.AllowDBNull = false;
                this.columnDocId.DefaultValue = ((string)(""));
                this.column是否删除.AllowDBNull = false;
                this.column是否删除.DefaultValue = ((bool)(false));
                this.column投箱状态.AllowDBNull = false;
                this.column投箱状态.DefaultValue = ((bool)(false));
                this.column清退人.AllowDBNull = false;
                this.column清退人.DefaultValue = ((string)(""));
                this.column录像文件名称.AllowDBNull = false;
                this.column录像文件名称.DefaultValue = ((string)(""));
                this.column是否勘误.AllowDBNull = false;
                this.column是否勘误.DefaultValue = ((bool)(false));
                this.column取件状态.AllowDBNull = false;
                this.column取件状态.DefaultValue = ((bool)(false));
                this.column同步错误次数.AllowDBNull = false;
                this.column同步错误次数.DefaultValue = ((int)(0));
                this.column投箱类型.AllowDBNull = false;
                this.column投箱类型.DefaultValue = ((int)(0));
                this.column是否退信.AllowDBNull = false;
                this.column是否退信.DefaultValue = ((bool)(false));
                this.column退信管理员证卡编号.AllowDBNull = false;
                this.column退信管理员证卡编号.DefaultValue = ((string)(""));
                this.column分组投箱方式.AllowDBNull = false;
                this.column分组投箱方式.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 预发表Row New预发表Row() {
                return ((预发表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 预发表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(预发表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.预发表RowChanged != null)) {
                    this.预发表RowChanged(this, new 预发表RowChangeEvent(((预发表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.预发表RowChanging != null)) {
                    this.预发表RowChanging(this, new 预发表RowChangeEvent(((预发表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.预发表RowDeleted != null)) {
                    this.预发表RowDeleted(this, new 预发表RowChangeEvent(((预发表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.预发表RowDeleting != null)) {
                    this.预发表RowDeleting(this, new 预发表RowChangeEvent(((预发表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove预发表Row(预发表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LocalDataSet ds = new LocalDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "预发表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 范围表DataTable : global::System.Data.TypedTableBase<范围表Row> {
            
            private global::System.Data.DataColumn column是否同步;
            
            private global::System.Data.DataColumn column预发标识;
            
            private global::System.Data.DataColumn column收件箱格号码;
            
            private global::System.Data.DataColumn column份号;
            
            private global::System.Data.DataColumn column分发份数;
            
            private global::System.Data.DataColumn column是否删除;
            
            private global::System.Data.DataColumn column投箱状态;
            
            private global::System.Data.DataColumn column投箱时间;
            
            private global::System.Data.DataColumn column投入份数;
            
            private global::System.Data.DataColumn column是否勘误;
            
            private global::System.Data.DataColumn column勘误时间;
            
            private global::System.Data.DataColumn column勘误管理员卡号;
            
            private global::System.Data.DataColumn column勘误交换员卡号;
            
            private global::System.Data.DataColumn column取件状态;
            
            private global::System.Data.DataColumn column取件时间;
            
            private global::System.Data.DataColumn column取件人证卡号码;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 范围表DataTable() {
                this.TableName = "范围表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 范围表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected 范围表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 是否同步Column {
                get {
                    return this.column是否同步;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 预发标识Column {
                get {
                    return this.column预发标识;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 收件箱格号码Column {
                get {
                    return this.column收件箱格号码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 份号Column {
                get {
                    return this.column份号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 分发份数Column {
                get {
                    return this.column分发份数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 是否删除Column {
                get {
                    return this.column是否删除;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 投箱状态Column {
                get {
                    return this.column投箱状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 投箱时间Column {
                get {
                    return this.column投箱时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 投入份数Column {
                get {
                    return this.column投入份数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 是否勘误Column {
                get {
                    return this.column是否勘误;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 勘误时间Column {
                get {
                    return this.column勘误时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 勘误管理员卡号Column {
                get {
                    return this.column勘误管理员卡号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 勘误交换员卡号Column {
                get {
                    return this.column勘误交换员卡号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取件状态Column {
                get {
                    return this.column取件状态;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取件时间Column {
                get {
                    return this.column取件时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取件人证卡号码Column {
                get {
                    return this.column取件人证卡号码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 范围表Row this[int index] {
                get {
                    return ((范围表Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 范围表RowChangeEventHandler 范围表RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 范围表RowChangeEventHandler 范围表RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 范围表RowChangeEventHandler 范围表RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 范围表RowChangeEventHandler 范围表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add范围表Row(范围表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 范围表Row Add范围表Row(
                        bool 是否同步, 
                        预发表Row parent预发表RowByFK_范围表_预发表, 
                        int 收件箱格号码, 
                        string 份号, 
                        int 分发份数, 
                        bool 是否删除, 
                        bool 投箱状态, 
                        System.DateTime 投箱时间, 
                        int 投入份数, 
                        bool 是否勘误, 
                        System.DateTime 勘误时间, 
                        string 勘误管理员卡号, 
                        string 勘误交换员卡号, 
                        bool 取件状态, 
                        System.DateTime 取件时间, 
                        string 取件人证卡号码) {
                范围表Row row范围表Row = ((范围表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        是否同步,
                        null,
                        收件箱格号码,
                        份号,
                        分发份数,
                        是否删除,
                        投箱状态,
                        投箱时间,
                        投入份数,
                        是否勘误,
                        勘误时间,
                        勘误管理员卡号,
                        勘误交换员卡号,
                        取件状态,
                        取件时间,
                        取件人证卡号码};
                if ((parent预发表RowByFK_范围表_预发表 != null)) {
                    columnValuesArray[1] = parent预发表RowByFK_范围表_预发表[1];
                }
                row范围表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row范围表Row);
                return row范围表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                范围表DataTable cln = ((范围表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 范围表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column是否同步 = base.Columns["是否同步"];
                this.column预发标识 = base.Columns["预发标识"];
                this.column收件箱格号码 = base.Columns["收件箱格号码"];
                this.column份号 = base.Columns["份号"];
                this.column分发份数 = base.Columns["分发份数"];
                this.column是否删除 = base.Columns["是否删除"];
                this.column投箱状态 = base.Columns["投箱状态"];
                this.column投箱时间 = base.Columns["投箱时间"];
                this.column投入份数 = base.Columns["投入份数"];
                this.column是否勘误 = base.Columns["是否勘误"];
                this.column勘误时间 = base.Columns["勘误时间"];
                this.column勘误管理员卡号 = base.Columns["勘误管理员卡号"];
                this.column勘误交换员卡号 = base.Columns["勘误交换员卡号"];
                this.column取件状态 = base.Columns["取件状态"];
                this.column取件时间 = base.Columns["取件时间"];
                this.column取件人证卡号码 = base.Columns["取件人证卡号码"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column是否同步 = new global::System.Data.DataColumn("是否同步", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否同步);
                this.column预发标识 = new global::System.Data.DataColumn("预发标识", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column预发标识);
                this.column收件箱格号码 = new global::System.Data.DataColumn("收件箱格号码", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column收件箱格号码);
                this.column份号 = new global::System.Data.DataColumn("份号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column份号);
                this.column分发份数 = new global::System.Data.DataColumn("分发份数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column分发份数);
                this.column是否删除 = new global::System.Data.DataColumn("是否删除", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否删除);
                this.column投箱状态 = new global::System.Data.DataColumn("投箱状态", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column投箱状态);
                this.column投箱时间 = new global::System.Data.DataColumn("投箱时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column投箱时间);
                this.column投入份数 = new global::System.Data.DataColumn("投入份数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column投入份数);
                this.column是否勘误 = new global::System.Data.DataColumn("是否勘误", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否勘误);
                this.column勘误时间 = new global::System.Data.DataColumn("勘误时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column勘误时间);
                this.column勘误管理员卡号 = new global::System.Data.DataColumn("勘误管理员卡号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column勘误管理员卡号);
                this.column勘误交换员卡号 = new global::System.Data.DataColumn("勘误交换员卡号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column勘误交换员卡号);
                this.column取件状态 = new global::System.Data.DataColumn("取件状态", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取件状态);
                this.column取件时间 = new global::System.Data.DataColumn("取件时间", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取件时间);
                this.column取件人证卡号码 = new global::System.Data.DataColumn("取件人证卡号码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取件人证卡号码);
                this.column是否同步.AllowDBNull = false;
                this.column是否同步.DefaultValue = ((bool)(false));
                this.column预发标识.AllowDBNull = false;
                this.column预发标识.DefaultValue = ((string)(""));
                this.column收件箱格号码.AllowDBNull = false;
                this.column收件箱格号码.DefaultValue = ((int)(0));
                this.column份号.DefaultValue = ((string)(""));
                this.column分发份数.AllowDBNull = false;
                this.column分发份数.DefaultValue = ((int)(1));
                this.column是否删除.AllowDBNull = false;
                this.column是否删除.DefaultValue = ((bool)(false));
                this.column投箱状态.AllowDBNull = false;
                this.column投箱状态.DefaultValue = ((bool)(false));
                this.column投入份数.AllowDBNull = false;
                this.column投入份数.DefaultValue = ((int)(0));
                this.column是否勘误.AllowDBNull = false;
                this.column是否勘误.DefaultValue = ((bool)(false));
                this.column取件状态.AllowDBNull = false;
                this.column取件状态.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 范围表Row New范围表Row() {
                return ((范围表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 范围表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(范围表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.范围表RowChanged != null)) {
                    this.范围表RowChanged(this, new 范围表RowChangeEvent(((范围表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.范围表RowChanging != null)) {
                    this.范围表RowChanging(this, new 范围表RowChangeEvent(((范围表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.范围表RowDeleted != null)) {
                    this.范围表RowDeleted(this, new 范围表RowChangeEvent(((范围表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.范围表RowDeleting != null)) {
                    this.范围表RowDeleting(this, new 范围表RowChangeEvent(((范围表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove范围表Row(范围表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LocalDataSet ds = new LocalDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "范围表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 证卡列表DataTable : global::System.Data.TypedTableBase<证卡列表Row> {
            
            private global::System.Data.DataColumn column证卡编号;
            
            private global::System.Data.DataColumn column验证类型;
            
            private global::System.Data.DataColumn column证卡号码;
            
            private global::System.Data.DataColumn column证卡类型;
            
            private global::System.Data.DataColumn column箱格号码;
            
            private global::System.Data.DataColumn column单位名称;
            
            private global::System.Data.DataColumn column用户名称;
            
            private global::System.Data.DataColumn column用户可以打印的清单的类型;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 证卡列表DataTable() {
                this.TableName = "证卡列表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 证卡列表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected 证卡列表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 证卡编号Column {
                get {
                    return this.column证卡编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 验证类型Column {
                get {
                    return this.column验证类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 证卡号码Column {
                get {
                    return this.column证卡号码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 证卡类型Column {
                get {
                    return this.column证卡类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 箱格号码Column {
                get {
                    return this.column箱格号码;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 单位名称Column {
                get {
                    return this.column单位名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 用户名称Column {
                get {
                    return this.column用户名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 用户可以打印的清单的类型Column {
                get {
                    return this.column用户可以打印的清单的类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 证卡列表Row this[int index] {
                get {
                    return ((证卡列表Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 证卡列表RowChangeEventHandler 证卡列表RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 证卡列表RowChangeEventHandler 证卡列表RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 证卡列表RowChangeEventHandler 证卡列表RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 证卡列表RowChangeEventHandler 证卡列表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add证卡列表Row(证卡列表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 证卡列表Row Add证卡列表Row(int 证卡编号, int 验证类型, string 证卡号码, int 证卡类型, int 箱格号码, string 单位名称, string 用户名称, int 用户可以打印的清单的类型) {
                证卡列表Row row证卡列表Row = ((证卡列表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        证卡编号,
                        验证类型,
                        证卡号码,
                        证卡类型,
                        箱格号码,
                        单位名称,
                        用户名称,
                        用户可以打印的清单的类型};
                row证卡列表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row证卡列表Row);
                return row证卡列表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                证卡列表DataTable cln = ((证卡列表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 证卡列表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column证卡编号 = base.Columns["证卡编号"];
                this.column验证类型 = base.Columns["验证类型"];
                this.column证卡号码 = base.Columns["证卡号码"];
                this.column证卡类型 = base.Columns["证卡类型"];
                this.column箱格号码 = base.Columns["箱格号码"];
                this.column单位名称 = base.Columns["单位名称"];
                this.column用户名称 = base.Columns["用户名称"];
                this.column用户可以打印的清单的类型 = base.Columns["用户可以打印的清单的类型"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column证卡编号 = new global::System.Data.DataColumn("证卡编号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证卡编号);
                this.column验证类型 = new global::System.Data.DataColumn("验证类型", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column验证类型);
                this.column证卡号码 = new global::System.Data.DataColumn("证卡号码", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证卡号码);
                this.column证卡类型 = new global::System.Data.DataColumn("证卡类型", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column证卡类型);
                this.column箱格号码 = new global::System.Data.DataColumn("箱格号码", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column箱格号码);
                this.column单位名称 = new global::System.Data.DataColumn("单位名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位名称);
                this.column用户名称 = new global::System.Data.DataColumn("用户名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column用户名称);
                this.column用户可以打印的清单的类型 = new global::System.Data.DataColumn("用户可以打印的清单的类型", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column用户可以打印的清单的类型);
                this.column验证类型.AllowDBNull = false;
                this.column验证类型.DefaultValue = ((int)(1));
                this.column证卡类型.AllowDBNull = false;
                this.column证卡类型.DefaultValue = ((int)(2));
                this.column箱格号码.AllowDBNull = false;
                this.column箱格号码.DefaultValue = ((int)(0));
                this.column单位名称.DefaultValue = ((string)(""));
                this.column用户名称.DefaultValue = ((string)(""));
                this.column用户可以打印的清单的类型.AllowDBNull = false;
                this.column用户可以打印的清单的类型.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 证卡列表Row New证卡列表Row() {
                return ((证卡列表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 证卡列表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(证卡列表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.证卡列表RowChanged != null)) {
                    this.证卡列表RowChanged(this, new 证卡列表RowChangeEvent(((证卡列表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.证卡列表RowChanging != null)) {
                    this.证卡列表RowChanging(this, new 证卡列表RowChangeEvent(((证卡列表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.证卡列表RowDeleted != null)) {
                    this.证卡列表RowDeleted(this, new 证卡列表RowChangeEvent(((证卡列表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.证卡列表RowDeleting != null)) {
                    this.证卡列表RowDeleting(this, new 证卡列表RowChangeEvent(((证卡列表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove证卡列表Row(证卡列表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LocalDataSet ds = new LocalDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "证卡列表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 规则策略DataTable : global::System.Data.TypedTableBase<规则策略Row> {
            
            private global::System.Data.DataColumn column规则标识;
            
            private global::System.Data.DataColumn column规则名称;
            
            private global::System.Data.DataColumn column规则类型;
            
            private global::System.Data.DataColumn column允许直投;
            
            private global::System.Data.DataColumn column允许解析;
            
            private global::System.Data.DataColumn column允许普发;
            
            private global::System.Data.DataColumn column允许模板;
            
            private global::System.Data.DataColumn column允许重复投箱;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 规则策略DataTable() {
                this.TableName = "规则策略";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 规则策略DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected 规则策略DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 规则标识Column {
                get {
                    return this.column规则标识;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 规则名称Column {
                get {
                    return this.column规则名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 规则类型Column {
                get {
                    return this.column规则类型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 允许直投Column {
                get {
                    return this.column允许直投;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 允许解析Column {
                get {
                    return this.column允许解析;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 允许普发Column {
                get {
                    return this.column允许普发;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 允许模板Column {
                get {
                    return this.column允许模板;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 允许重复投箱Column {
                get {
                    return this.column允许重复投箱;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 规则策略Row this[int index] {
                get {
                    return ((规则策略Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 规则策略RowChangeEventHandler 规则策略RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 规则策略RowChangeEventHandler 规则策略RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 规则策略RowChangeEventHandler 规则策略RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 规则策略RowChangeEventHandler 规则策略RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add规则策略Row(规则策略Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 规则策略Row Add规则策略Row(int 规则标识, string 规则名称, int 规则类型, bool 允许直投, bool 允许解析, bool 允许普发, bool 允许模板, bool 允许重复投箱) {
                规则策略Row row规则策略Row = ((规则策略Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        规则标识,
                        规则名称,
                        规则类型,
                        允许直投,
                        允许解析,
                        允许普发,
                        允许模板,
                        允许重复投箱};
                row规则策略Row.ItemArray = columnValuesArray;
                this.Rows.Add(row规则策略Row);
                return row规则策略Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                规则策略DataTable cln = ((规则策略DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 规则策略DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column规则标识 = base.Columns["规则标识"];
                this.column规则名称 = base.Columns["规则名称"];
                this.column规则类型 = base.Columns["规则类型"];
                this.column允许直投 = base.Columns["允许直投"];
                this.column允许解析 = base.Columns["允许解析"];
                this.column允许普发 = base.Columns["允许普发"];
                this.column允许模板 = base.Columns["允许模板"];
                this.column允许重复投箱 = base.Columns["允许重复投箱"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column规则标识 = new global::System.Data.DataColumn("规则标识", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规则标识);
                this.column规则名称 = new global::System.Data.DataColumn("规则名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规则名称);
                this.column规则类型 = new global::System.Data.DataColumn("规则类型", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column规则类型);
                this.column允许直投 = new global::System.Data.DataColumn("允许直投", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column允许直投);
                this.column允许解析 = new global::System.Data.DataColumn("允许解析", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column允许解析);
                this.column允许普发 = new global::System.Data.DataColumn("允许普发", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column允许普发);
                this.column允许模板 = new global::System.Data.DataColumn("允许模板", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column允许模板);
                this.column允许重复投箱 = new global::System.Data.DataColumn("允许重复投箱", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column允许重复投箱);
                this.column规则标识.AllowDBNull = false;
                this.column规则标识.DefaultValue = ((int)(0));
                this.column规则类型.AllowDBNull = false;
                this.column规则类型.DefaultValue = ((int)(0));
                this.column允许直投.AllowDBNull = false;
                this.column允许直投.DefaultValue = ((bool)(false));
                this.column允许解析.AllowDBNull = false;
                this.column允许解析.DefaultValue = ((bool)(false));
                this.column允许普发.AllowDBNull = false;
                this.column允许普发.DefaultValue = ((bool)(false));
                this.column允许模板.AllowDBNull = false;
                this.column允许模板.DefaultValue = ((bool)(false));
                this.column允许重复投箱.AllowDBNull = false;
                this.column允许重复投箱.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 规则策略Row New规则策略Row() {
                return ((规则策略Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 规则策略Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(规则策略Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.规则策略RowChanged != null)) {
                    this.规则策略RowChanged(this, new 规则策略RowChangeEvent(((规则策略Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.规则策略RowChanging != null)) {
                    this.规则策略RowChanging(this, new 规则策略RowChangeEvent(((规则策略Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.规则策略RowDeleted != null)) {
                    this.规则策略RowDeleted(this, new 规则策略RowChangeEvent(((规则策略Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.规则策略RowDeleting != null)) {
                    this.规则策略RowDeleting(this, new 规则策略RowChangeEvent(((规则策略Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove规则策略Row(规则策略Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LocalDataSet ds = new LocalDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "规则策略DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 箱格信息DataTable : global::System.Data.TypedTableBase<箱格信息Row> {
            
            private global::System.Data.DataColumn column逻辑箱号;
            
            private global::System.Data.DataColumn column单位编号;
            
            private global::System.Data.DataColumn column简称;
            
            private global::System.Data.DataColumn column全称;
            
            private global::System.Data.DataColumn column是否清退箱;
            
            private global::System.Data.DataColumn column箱格数量;
            
            private global::System.Data.DataColumn column是否有急件;
            
            private global::System.Data.DataColumn column登记数量;
            
            private global::System.Data.DataColumn column登记急件数量;
            
            private global::System.Data.DataColumn column箱格属性;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 箱格信息DataTable() {
                this.TableName = "箱格信息";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 箱格信息DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected 箱格信息DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 逻辑箱号Column {
                get {
                    return this.column逻辑箱号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 单位编号Column {
                get {
                    return this.column单位编号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 简称Column {
                get {
                    return this.column简称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 全称Column {
                get {
                    return this.column全称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 是否清退箱Column {
                get {
                    return this.column是否清退箱;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 箱格数量Column {
                get {
                    return this.column箱格数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 是否有急件Column {
                get {
                    return this.column是否有急件;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 登记数量Column {
                get {
                    return this.column登记数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 登记急件数量Column {
                get {
                    return this.column登记急件数量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 箱格属性Column {
                get {
                    return this.column箱格属性;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 箱格信息Row this[int index] {
                get {
                    return ((箱格信息Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 箱格信息RowChangeEventHandler 箱格信息RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 箱格信息RowChangeEventHandler 箱格信息RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 箱格信息RowChangeEventHandler 箱格信息RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 箱格信息RowChangeEventHandler 箱格信息RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add箱格信息Row(箱格信息Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 箱格信息Row Add箱格信息Row(int 逻辑箱号, string 单位编号, string 简称, string 全称, bool 是否清退箱, int 箱格数量, bool 是否有急件, int 登记数量, int 登记急件数量, int 箱格属性) {
                箱格信息Row row箱格信息Row = ((箱格信息Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        逻辑箱号,
                        单位编号,
                        简称,
                        全称,
                        是否清退箱,
                        箱格数量,
                        是否有急件,
                        登记数量,
                        登记急件数量,
                        箱格属性};
                row箱格信息Row.ItemArray = columnValuesArray;
                this.Rows.Add(row箱格信息Row);
                return row箱格信息Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                箱格信息DataTable cln = ((箱格信息DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 箱格信息DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column逻辑箱号 = base.Columns["逻辑箱号"];
                this.column单位编号 = base.Columns["单位编号"];
                this.column简称 = base.Columns["简称"];
                this.column全称 = base.Columns["全称"];
                this.column是否清退箱 = base.Columns["是否清退箱"];
                this.column箱格数量 = base.Columns["箱格数量"];
                this.column是否有急件 = base.Columns["是否有急件"];
                this.column登记数量 = base.Columns["登记数量"];
                this.column登记急件数量 = base.Columns["登记急件数量"];
                this.column箱格属性 = base.Columns["箱格属性"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column逻辑箱号 = new global::System.Data.DataColumn("逻辑箱号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column逻辑箱号);
                this.column单位编号 = new global::System.Data.DataColumn("单位编号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column单位编号);
                this.column简称 = new global::System.Data.DataColumn("简称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column简称);
                this.column全称 = new global::System.Data.DataColumn("全称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column全称);
                this.column是否清退箱 = new global::System.Data.DataColumn("是否清退箱", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否清退箱);
                this.column箱格数量 = new global::System.Data.DataColumn("箱格数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column箱格数量);
                this.column是否有急件 = new global::System.Data.DataColumn("是否有急件", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否有急件);
                this.column登记数量 = new global::System.Data.DataColumn("登记数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column登记数量);
                this.column登记急件数量 = new global::System.Data.DataColumn("登记急件数量", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column登记急件数量);
                this.column箱格属性 = new global::System.Data.DataColumn("箱格属性", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column箱格属性);
                this.column逻辑箱号.AllowDBNull = false;
                this.column逻辑箱号.DefaultValue = ((int)(0));
                this.column单位编号.AllowDBNull = false;
                this.column单位编号.DefaultValue = ((string)("\"\""));
                this.column简称.AllowDBNull = false;
                this.column简称.DefaultValue = ((string)("\"\""));
                this.column全称.AllowDBNull = false;
                this.column全称.DefaultValue = ((string)("\"\""));
                this.column是否清退箱.AllowDBNull = false;
                this.column是否清退箱.DefaultValue = ((bool)(false));
                this.column箱格数量.AllowDBNull = false;
                this.column箱格数量.DefaultValue = ((int)(0));
                this.column是否有急件.AllowDBNull = false;
                this.column是否有急件.DefaultValue = ((bool)(false));
                this.column登记数量.AllowDBNull = false;
                this.column登记数量.DefaultValue = ((int)(0));
                this.column登记急件数量.AllowDBNull = false;
                this.column登记急件数量.DefaultValue = ((int)(0));
                this.column箱格属性.AllowDBNull = false;
                this.column箱格属性.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 箱格信息Row New箱格信息Row() {
                return ((箱格信息Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 箱格信息Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(箱格信息Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.箱格信息RowChanged != null)) {
                    this.箱格信息RowChanged(this, new 箱格信息RowChangeEvent(((箱格信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.箱格信息RowChanging != null)) {
                    this.箱格信息RowChanging(this, new 箱格信息RowChangeEvent(((箱格信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.箱格信息RowDeleted != null)) {
                    this.箱格信息RowDeleted(this, new 箱格信息RowChangeEvent(((箱格信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.箱格信息RowDeleting != null)) {
                    this.箱格信息RowDeleting(this, new 箱格信息RowChangeEvent(((箱格信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove箱格信息Row(箱格信息Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LocalDataSet ds = new LocalDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "箱格信息DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 用户取件表DataTable : global::System.Data.TypedTableBase<用户取件表Row> {
            
            private global::System.Data.DataColumn column逻辑箱号;
            
            private global::System.Data.DataColumn column用户卡号;
            
            private global::System.Data.DataColumn column照片内容;
            
            private global::System.Data.DataColumn column是否同步;
            
            private global::System.Data.DataColumn column取件时间;
            
            private global::System.Data.DataColumn column是否打印发件清单;
            
            private global::System.Data.DataColumn column是否打印取件清单;
            
            private global::System.Data.DataColumn column同步次数;
            
            private global::System.Data.DataColumn column图片数据是否已经处理;
            
            private global::System.Data.DataColumn column取件记录ID;
            
            private global::System.Data.DataColumn column清单打印机;
            
            private global::System.Data.DataColumn column取件柜箱组名称;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 用户取件表DataTable() {
                this.TableName = "用户取件表";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 用户取件表DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected 用户取件表DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 逻辑箱号Column {
                get {
                    return this.column逻辑箱号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 用户卡号Column {
                get {
                    return this.column用户卡号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 照片内容Column {
                get {
                    return this.column照片内容;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 是否同步Column {
                get {
                    return this.column是否同步;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取件时间Column {
                get {
                    return this.column取件时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 是否打印发件清单Column {
                get {
                    return this.column是否打印发件清单;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 是否打印取件清单Column {
                get {
                    return this.column是否打印取件清单;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 同步次数Column {
                get {
                    return this.column同步次数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 图片数据是否已经处理Column {
                get {
                    return this.column图片数据是否已经处理;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取件记录IDColumn {
                get {
                    return this.column取件记录ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 清单打印机Column {
                get {
                    return this.column清单打印机;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 取件柜箱组名称Column {
                get {
                    return this.column取件柜箱组名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 用户取件表Row this[int index] {
                get {
                    return ((用户取件表Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 用户取件表RowChangeEventHandler 用户取件表RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 用户取件表RowChangeEventHandler 用户取件表RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 用户取件表RowChangeEventHandler 用户取件表RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 用户取件表RowChangeEventHandler 用户取件表RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add用户取件表Row(用户取件表Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 用户取件表Row Add用户取件表Row(int 逻辑箱号, string 用户卡号, string 照片内容, bool 是否同步, string 取件时间, bool 是否打印发件清单, bool 是否打印取件清单, int 同步次数, bool 图片数据是否已经处理, int 取件记录ID, string 清单打印机, string 取件柜箱组名称) {
                用户取件表Row row用户取件表Row = ((用户取件表Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        逻辑箱号,
                        用户卡号,
                        照片内容,
                        是否同步,
                        取件时间,
                        是否打印发件清单,
                        是否打印取件清单,
                        同步次数,
                        图片数据是否已经处理,
                        取件记录ID,
                        清单打印机,
                        取件柜箱组名称};
                row用户取件表Row.ItemArray = columnValuesArray;
                this.Rows.Add(row用户取件表Row);
                return row用户取件表Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                用户取件表DataTable cln = ((用户取件表DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 用户取件表DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column逻辑箱号 = base.Columns["逻辑箱号"];
                this.column用户卡号 = base.Columns["用户卡号"];
                this.column照片内容 = base.Columns["照片内容"];
                this.column是否同步 = base.Columns["是否同步"];
                this.column取件时间 = base.Columns["取件时间"];
                this.column是否打印发件清单 = base.Columns["是否打印发件清单"];
                this.column是否打印取件清单 = base.Columns["是否打印取件清单"];
                this.column同步次数 = base.Columns["同步次数"];
                this.column图片数据是否已经处理 = base.Columns["图片数据是否已经处理"];
                this.column取件记录ID = base.Columns["取件记录ID"];
                this.column清单打印机 = base.Columns["清单打印机"];
                this.column取件柜箱组名称 = base.Columns["取件柜箱组名称"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column逻辑箱号 = new global::System.Data.DataColumn("逻辑箱号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column逻辑箱号);
                this.column用户卡号 = new global::System.Data.DataColumn("用户卡号", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column用户卡号);
                this.column照片内容 = new global::System.Data.DataColumn("照片内容", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column照片内容);
                this.column是否同步 = new global::System.Data.DataColumn("是否同步", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否同步);
                this.column取件时间 = new global::System.Data.DataColumn("取件时间", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取件时间);
                this.column是否打印发件清单 = new global::System.Data.DataColumn("是否打印发件清单", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否打印发件清单);
                this.column是否打印取件清单 = new global::System.Data.DataColumn("是否打印取件清单", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column是否打印取件清单);
                this.column同步次数 = new global::System.Data.DataColumn("同步次数", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column同步次数);
                this.column图片数据是否已经处理 = new global::System.Data.DataColumn("图片数据是否已经处理", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column图片数据是否已经处理);
                this.column取件记录ID = new global::System.Data.DataColumn("取件记录ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取件记录ID);
                this.column清单打印机 = new global::System.Data.DataColumn("清单打印机", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column清单打印机);
                this.column取件柜箱组名称 = new global::System.Data.DataColumn("取件柜箱组名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column取件柜箱组名称);
                this.column逻辑箱号.AllowDBNull = false;
                this.column逻辑箱号.DefaultValue = ((int)(0));
                this.column是否同步.AllowDBNull = false;
                this.column是否同步.DefaultValue = ((bool)(false));
                this.column是否打印发件清单.DefaultValue = ((bool)(false));
                this.column是否打印取件清单.DefaultValue = ((bool)(false));
                this.column同步次数.DefaultValue = ((int)(0));
                this.column图片数据是否已经处理.AllowDBNull = false;
                this.column图片数据是否已经处理.DefaultValue = ((bool)(false));
                this.column取件记录ID.AllowDBNull = false;
                this.column取件记录ID.DefaultValue = ((int)(0));
                this.column取件柜箱组名称.DefaultValue = ((string)(""));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 用户取件表Row New用户取件表Row() {
                return ((用户取件表Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 用户取件表Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(用户取件表Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.用户取件表RowChanged != null)) {
                    this.用户取件表RowChanged(this, new 用户取件表RowChangeEvent(((用户取件表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.用户取件表RowChanging != null)) {
                    this.用户取件表RowChanging(this, new 用户取件表RowChangeEvent(((用户取件表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.用户取件表RowDeleted != null)) {
                    this.用户取件表RowDeleted(this, new 用户取件表RowChangeEvent(((用户取件表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.用户取件表RowDeleting != null)) {
                    this.用户取件表RowDeleting(this, new 用户取件表RowChangeEvent(((用户取件表Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove用户取件表Row(用户取件表Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LocalDataSet ds = new LocalDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "用户取件表DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 提示信息DataTable : global::System.Data.TypedTableBase<提示信息Row> {
            
            private global::System.Data.DataColumn column逻辑箱号;
            
            private global::System.Data.DataColumn column出差信息;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 提示信息DataTable() {
                this.TableName = "提示信息";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 提示信息DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected 提示信息DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 逻辑箱号Column {
                get {
                    return this.column逻辑箱号;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 出差信息Column {
                get {
                    return this.column出差信息;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 提示信息Row this[int index] {
                get {
                    return ((提示信息Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 提示信息RowChangeEventHandler 提示信息RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 提示信息RowChangeEventHandler 提示信息RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 提示信息RowChangeEventHandler 提示信息RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event 提示信息RowChangeEventHandler 提示信息RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Add提示信息Row(提示信息Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 提示信息Row Add提示信息Row(int 逻辑箱号, string 出差信息) {
                提示信息Row row提示信息Row = ((提示信息Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        逻辑箱号,
                        出差信息};
                row提示信息Row.ItemArray = columnValuesArray;
                this.Rows.Add(row提示信息Row);
                return row提示信息Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                提示信息DataTable cln = ((提示信息DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 提示信息DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.column逻辑箱号 = base.Columns["逻辑箱号"];
                this.column出差信息 = base.Columns["出差信息"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.column逻辑箱号 = new global::System.Data.DataColumn("逻辑箱号", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column逻辑箱号);
                this.column出差信息 = new global::System.Data.DataColumn("出差信息", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column出差信息);
                this.column逻辑箱号.AllowDBNull = false;
                this.column逻辑箱号.DefaultValue = ((int)(0));
                this.column出差信息.AllowDBNull = false;
                this.column出差信息.DefaultValue = ((string)("\"\""));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 提示信息Row New提示信息Row() {
                return ((提示信息Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 提示信息Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(提示信息Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.提示信息RowChanged != null)) {
                    this.提示信息RowChanged(this, new 提示信息RowChangeEvent(((提示信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.提示信息RowChanging != null)) {
                    this.提示信息RowChanging(this, new 提示信息RowChangeEvent(((提示信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.提示信息RowDeleted != null)) {
                    this.提示信息RowDeleted(this, new 提示信息RowChangeEvent(((提示信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.提示信息RowDeleting != null)) {
                    this.提示信息RowDeleting(this, new 提示信息RowChangeEvent(((提示信息Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Remove提示信息Row(提示信息Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                LocalDataSet ds = new LocalDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "提示信息DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 预发表Row : global::System.Data.DataRow {
            
            private 预发表DataTable table预发表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 预发表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table预发表 = ((预发表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 是否同步 {
                get {
                    return ((bool)(this[this.table预发表.是否同步Column]));
                }
                set {
                    this[this.table预发表.是否同步Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 预发标识 {
                get {
                    return ((string)(this[this.table预发表.预发标识Column]));
                }
                set {
                    this[this.table预发表.预发标识Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 条码编号 {
                get {
                    try {
                        return ((string)(this[this.table预发表.条码编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预发表”中列“条码编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预发表.条码编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 条码编号56 {
                get {
                    try {
                        return ((string)(this[this.table预发表.条码编号56Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预发表”中列“条码编号56”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预发表.条码编号56Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 完整条码 {
                get {
                    try {
                        return ((string)(this[this.table预发表.完整条码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预发表”中列“完整条码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预发表.完整条码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 是否是急件 {
                get {
                    return ((bool)(this[this.table预发表.是否是急件Column]));
                }
                set {
                    this[this.table预发表.是否是急件Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 条码类型 {
                get {
                    return ((int)(this[this.table预发表.条码类型Column]));
                }
                set {
                    this[this.table预发表.条码类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 收件箱格号码 {
                get {
                    return ((int)(this[this.table预发表.收件箱格号码Column]));
                }
                set {
                    this[this.table预发表.收件箱格号码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 份号 {
                get {
                    try {
                        return ((string)(this[this.table预发表.份号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预发表”中列“份号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预发表.份号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 预发时间 {
                get {
                    try {
                        return ((string)(this[this.table预发表.预发时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预发表”中列“预发时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预发表.预发时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DocId {
                get {
                    return ((string)(this[this.table预发表.DocIdColumn]));
                }
                set {
                    this[this.table预发表.DocIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 是否删除 {
                get {
                    return ((bool)(this[this.table预发表.是否删除Column]));
                }
                set {
                    this[this.table预发表.是否删除Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 投箱状态 {
                get {
                    return ((bool)(this[this.table预发表.投箱状态Column]));
                }
                set {
                    this[this.table预发表.投箱状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 投箱时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table预发表.投箱时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预发表”中列“投箱时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预发表.投箱时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 手工加急 {
                get {
                    try {
                        return ((bool)(this[this.table预发表.手工加急Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预发表”中列“手工加急”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预发表.手工加急Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 清退人 {
                get {
                    return ((string)(this[this.table预发表.清退人Column]));
                }
                set {
                    this[this.table预发表.清退人Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 录像文件名称 {
                get {
                    return ((string)(this[this.table预发表.录像文件名称Column]));
                }
                set {
                    this[this.table预发表.录像文件名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 是否勘误 {
                get {
                    return ((bool)(this[this.table预发表.是否勘误Column]));
                }
                set {
                    this[this.table预发表.是否勘误Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 勘误时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table预发表.勘误时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预发表”中列“勘误时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预发表.勘误时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 勘误管理员卡号 {
                get {
                    try {
                        return ((string)(this[this.table预发表.勘误管理员卡号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预发表”中列“勘误管理员卡号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预发表.勘误管理员卡号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 勘误交换员卡号 {
                get {
                    try {
                        return ((string)(this[this.table预发表.勘误交换员卡号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预发表”中列“勘误交换员卡号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预发表.勘误交换员卡号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 取件状态 {
                get {
                    return ((bool)(this[this.table预发表.取件状态Column]));
                }
                set {
                    this[this.table预发表.取件状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 取件时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table预发表.取件时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预发表”中列“取件时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预发表.取件时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 取件人证卡号码 {
                get {
                    try {
                        return ((string)(this[this.table预发表.取件人证卡号码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“预发表”中列“取件人证卡号码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table预发表.取件人证卡号码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 同步错误次数 {
                get {
                    return ((int)(this[this.table预发表.同步错误次数Column]));
                }
                set {
                    this[this.table预发表.同步错误次数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 投箱类型 {
                get {
                    return ((int)(this[this.table预发表.投箱类型Column]));
                }
                set {
                    this[this.table预发表.投箱类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 是否退信 {
                get {
                    return ((bool)(this[this.table预发表.是否退信Column]));
                }
                set {
                    this[this.table预发表.是否退信Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 退信管理员证卡编号 {
                get {
                    return ((string)(this[this.table预发表.退信管理员证卡编号Column]));
                }
                set {
                    this[this.table预发表.退信管理员证卡编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 分组投箱方式 {
                get {
                    return ((int)(this[this.table预发表.分组投箱方式Column]));
                }
                set {
                    this[this.table预发表.分组投箱方式Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is条码编号Null() {
                return this.IsNull(this.table预发表.条码编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set条码编号Null() {
                this[this.table预发表.条码编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is条码编号56Null() {
                return this.IsNull(this.table预发表.条码编号56Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set条码编号56Null() {
                this[this.table预发表.条码编号56Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is完整条码Null() {
                return this.IsNull(this.table预发表.完整条码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set完整条码Null() {
                this[this.table预发表.完整条码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is份号Null() {
                return this.IsNull(this.table预发表.份号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set份号Null() {
                this[this.table预发表.份号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is预发时间Null() {
                return this.IsNull(this.table预发表.预发时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set预发时间Null() {
                this[this.table预发表.预发时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is投箱时间Null() {
                return this.IsNull(this.table预发表.投箱时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set投箱时间Null() {
                this[this.table预发表.投箱时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is手工加急Null() {
                return this.IsNull(this.table预发表.手工加急Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set手工加急Null() {
                this[this.table预发表.手工加急Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is勘误时间Null() {
                return this.IsNull(this.table预发表.勘误时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set勘误时间Null() {
                this[this.table预发表.勘误时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is勘误管理员卡号Null() {
                return this.IsNull(this.table预发表.勘误管理员卡号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set勘误管理员卡号Null() {
                this[this.table预发表.勘误管理员卡号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is勘误交换员卡号Null() {
                return this.IsNull(this.table预发表.勘误交换员卡号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set勘误交换员卡号Null() {
                this[this.table预发表.勘误交换员卡号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取件时间Null() {
                return this.IsNull(this.table预发表.取件时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取件时间Null() {
                this[this.table预发表.取件时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取件人证卡号码Null() {
                return this.IsNull(this.table预发表.取件人证卡号码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取件人证卡号码Null() {
                this[this.table预发表.取件人证卡号码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 范围表Row[] Get范围表Rows() {
                if ((this.Table.ChildRelations["FK_范围表_预发表"] == null)) {
                    return new 范围表Row[0];
                }
                else {
                    return ((范围表Row[])(base.GetChildRows(this.Table.ChildRelations["FK_范围表_预发表"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 范围表Row : global::System.Data.DataRow {
            
            private 范围表DataTable table范围表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 范围表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table范围表 = ((范围表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 是否同步 {
                get {
                    return ((bool)(this[this.table范围表.是否同步Column]));
                }
                set {
                    this[this.table范围表.是否同步Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 预发标识 {
                get {
                    return ((string)(this[this.table范围表.预发标识Column]));
                }
                set {
                    this[this.table范围表.预发标识Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 收件箱格号码 {
                get {
                    return ((int)(this[this.table范围表.收件箱格号码Column]));
                }
                set {
                    this[this.table范围表.收件箱格号码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 份号 {
                get {
                    try {
                        return ((string)(this[this.table范围表.份号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“范围表”中列“份号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table范围表.份号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 分发份数 {
                get {
                    return ((int)(this[this.table范围表.分发份数Column]));
                }
                set {
                    this[this.table范围表.分发份数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 是否删除 {
                get {
                    return ((bool)(this[this.table范围表.是否删除Column]));
                }
                set {
                    this[this.table范围表.是否删除Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 投箱状态 {
                get {
                    return ((bool)(this[this.table范围表.投箱状态Column]));
                }
                set {
                    this[this.table范围表.投箱状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 投箱时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table范围表.投箱时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“范围表”中列“投箱时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table范围表.投箱时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 投入份数 {
                get {
                    return ((int)(this[this.table范围表.投入份数Column]));
                }
                set {
                    this[this.table范围表.投入份数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 是否勘误 {
                get {
                    return ((bool)(this[this.table范围表.是否勘误Column]));
                }
                set {
                    this[this.table范围表.是否勘误Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 勘误时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table范围表.勘误时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“范围表”中列“勘误时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table范围表.勘误时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 勘误管理员卡号 {
                get {
                    try {
                        return ((string)(this[this.table范围表.勘误管理员卡号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“范围表”中列“勘误管理员卡号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table范围表.勘误管理员卡号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 勘误交换员卡号 {
                get {
                    try {
                        return ((string)(this[this.table范围表.勘误交换员卡号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“范围表”中列“勘误交换员卡号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table范围表.勘误交换员卡号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 取件状态 {
                get {
                    return ((bool)(this[this.table范围表.取件状态Column]));
                }
                set {
                    this[this.table范围表.取件状态Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 取件时间 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.table范围表.取件时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“范围表”中列“取件时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table范围表.取件时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 取件人证卡号码 {
                get {
                    try {
                        return ((string)(this[this.table范围表.取件人证卡号码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“范围表”中列“取件人证卡号码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table范围表.取件人证卡号码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 预发表Row 预发表Row {
                get {
                    return ((预发表Row)(this.GetParentRow(this.Table.ParentRelations["FK_范围表_预发表"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_范围表_预发表"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is份号Null() {
                return this.IsNull(this.table范围表.份号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set份号Null() {
                this[this.table范围表.份号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is投箱时间Null() {
                return this.IsNull(this.table范围表.投箱时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set投箱时间Null() {
                this[this.table范围表.投箱时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is勘误时间Null() {
                return this.IsNull(this.table范围表.勘误时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set勘误时间Null() {
                this[this.table范围表.勘误时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is勘误管理员卡号Null() {
                return this.IsNull(this.table范围表.勘误管理员卡号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set勘误管理员卡号Null() {
                this[this.table范围表.勘误管理员卡号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is勘误交换员卡号Null() {
                return this.IsNull(this.table范围表.勘误交换员卡号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set勘误交换员卡号Null() {
                this[this.table范围表.勘误交换员卡号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取件时间Null() {
                return this.IsNull(this.table范围表.取件时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取件时间Null() {
                this[this.table范围表.取件时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取件人证卡号码Null() {
                return this.IsNull(this.table范围表.取件人证卡号码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取件人证卡号码Null() {
                this[this.table范围表.取件人证卡号码Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 证卡列表Row : global::System.Data.DataRow {
            
            private 证卡列表DataTable table证卡列表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 证卡列表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table证卡列表 = ((证卡列表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 证卡编号 {
                get {
                    try {
                        return ((int)(this[this.table证卡列表.证卡编号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“证卡列表”中列“证卡编号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table证卡列表.证卡编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 验证类型 {
                get {
                    return ((int)(this[this.table证卡列表.验证类型Column]));
                }
                set {
                    this[this.table证卡列表.验证类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 证卡号码 {
                get {
                    try {
                        return ((string)(this[this.table证卡列表.证卡号码Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“证卡列表”中列“证卡号码”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table证卡列表.证卡号码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 证卡类型 {
                get {
                    return ((int)(this[this.table证卡列表.证卡类型Column]));
                }
                set {
                    this[this.table证卡列表.证卡类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 箱格号码 {
                get {
                    return ((int)(this[this.table证卡列表.箱格号码Column]));
                }
                set {
                    this[this.table证卡列表.箱格号码Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 单位名称 {
                get {
                    try {
                        return ((string)(this[this.table证卡列表.单位名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“证卡列表”中列“单位名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table证卡列表.单位名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 用户名称 {
                get {
                    try {
                        return ((string)(this[this.table证卡列表.用户名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“证卡列表”中列“用户名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table证卡列表.用户名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 用户可以打印的清单的类型 {
                get {
                    return ((int)(this[this.table证卡列表.用户可以打印的清单的类型Column]));
                }
                set {
                    this[this.table证卡列表.用户可以打印的清单的类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is证卡编号Null() {
                return this.IsNull(this.table证卡列表.证卡编号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set证卡编号Null() {
                this[this.table证卡列表.证卡编号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is证卡号码Null() {
                return this.IsNull(this.table证卡列表.证卡号码Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set证卡号码Null() {
                this[this.table证卡列表.证卡号码Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is单位名称Null() {
                return this.IsNull(this.table证卡列表.单位名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set单位名称Null() {
                this[this.table证卡列表.单位名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is用户名称Null() {
                return this.IsNull(this.table证卡列表.用户名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set用户名称Null() {
                this[this.table证卡列表.用户名称Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 规则策略Row : global::System.Data.DataRow {
            
            private 规则策略DataTable table规则策略;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 规则策略Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table规则策略 = ((规则策略DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 规则标识 {
                get {
                    return ((int)(this[this.table规则策略.规则标识Column]));
                }
                set {
                    this[this.table规则策略.规则标识Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 规则名称 {
                get {
                    try {
                        return ((string)(this[this.table规则策略.规则名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“规则策略”中列“规则名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table规则策略.规则名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 规则类型 {
                get {
                    return ((int)(this[this.table规则策略.规则类型Column]));
                }
                set {
                    this[this.table规则策略.规则类型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 允许直投 {
                get {
                    return ((bool)(this[this.table规则策略.允许直投Column]));
                }
                set {
                    this[this.table规则策略.允许直投Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 允许解析 {
                get {
                    return ((bool)(this[this.table规则策略.允许解析Column]));
                }
                set {
                    this[this.table规则策略.允许解析Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 允许普发 {
                get {
                    return ((bool)(this[this.table规则策略.允许普发Column]));
                }
                set {
                    this[this.table规则策略.允许普发Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 允许模板 {
                get {
                    return ((bool)(this[this.table规则策略.允许模板Column]));
                }
                set {
                    this[this.table规则策略.允许模板Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 允许重复投箱 {
                get {
                    return ((bool)(this[this.table规则策略.允许重复投箱Column]));
                }
                set {
                    this[this.table规则策略.允许重复投箱Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is规则名称Null() {
                return this.IsNull(this.table规则策略.规则名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set规则名称Null() {
                this[this.table规则策略.规则名称Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 箱格信息Row : global::System.Data.DataRow {
            
            private 箱格信息DataTable table箱格信息;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 箱格信息Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table箱格信息 = ((箱格信息DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 逻辑箱号 {
                get {
                    return ((int)(this[this.table箱格信息.逻辑箱号Column]));
                }
                set {
                    this[this.table箱格信息.逻辑箱号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 单位编号 {
                get {
                    return ((string)(this[this.table箱格信息.单位编号Column]));
                }
                set {
                    this[this.table箱格信息.单位编号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 简称 {
                get {
                    return ((string)(this[this.table箱格信息.简称Column]));
                }
                set {
                    this[this.table箱格信息.简称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 全称 {
                get {
                    return ((string)(this[this.table箱格信息.全称Column]));
                }
                set {
                    this[this.table箱格信息.全称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 是否清退箱 {
                get {
                    return ((bool)(this[this.table箱格信息.是否清退箱Column]));
                }
                set {
                    this[this.table箱格信息.是否清退箱Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 箱格数量 {
                get {
                    return ((int)(this[this.table箱格信息.箱格数量Column]));
                }
                set {
                    this[this.table箱格信息.箱格数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 是否有急件 {
                get {
                    return ((bool)(this[this.table箱格信息.是否有急件Column]));
                }
                set {
                    this[this.table箱格信息.是否有急件Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 登记数量 {
                get {
                    return ((int)(this[this.table箱格信息.登记数量Column]));
                }
                set {
                    this[this.table箱格信息.登记数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 登记急件数量 {
                get {
                    return ((int)(this[this.table箱格信息.登记急件数量Column]));
                }
                set {
                    this[this.table箱格信息.登记急件数量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 箱格属性 {
                get {
                    return ((int)(this[this.table箱格信息.箱格属性Column]));
                }
                set {
                    this[this.table箱格信息.箱格属性Column] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 用户取件表Row : global::System.Data.DataRow {
            
            private 用户取件表DataTable table用户取件表;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 用户取件表Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table用户取件表 = ((用户取件表DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 逻辑箱号 {
                get {
                    return ((int)(this[this.table用户取件表.逻辑箱号Column]));
                }
                set {
                    this[this.table用户取件表.逻辑箱号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 用户卡号 {
                get {
                    try {
                        return ((string)(this[this.table用户取件表.用户卡号Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“用户取件表”中列“用户卡号”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table用户取件表.用户卡号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 照片内容 {
                get {
                    try {
                        return ((string)(this[this.table用户取件表.照片内容Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“用户取件表”中列“照片内容”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table用户取件表.照片内容Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 是否同步 {
                get {
                    return ((bool)(this[this.table用户取件表.是否同步Column]));
                }
                set {
                    this[this.table用户取件表.是否同步Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 取件时间 {
                get {
                    try {
                        return ((string)(this[this.table用户取件表.取件时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“用户取件表”中列“取件时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table用户取件表.取件时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 是否打印发件清单 {
                get {
                    try {
                        return ((bool)(this[this.table用户取件表.是否打印发件清单Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“用户取件表”中列“是否打印发件清单”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table用户取件表.是否打印发件清单Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 是否打印取件清单 {
                get {
                    try {
                        return ((bool)(this[this.table用户取件表.是否打印取件清单Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“用户取件表”中列“是否打印取件清单”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table用户取件表.是否打印取件清单Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 同步次数 {
                get {
                    try {
                        return ((int)(this[this.table用户取件表.同步次数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“用户取件表”中列“同步次数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table用户取件表.同步次数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 图片数据是否已经处理 {
                get {
                    return ((bool)(this[this.table用户取件表.图片数据是否已经处理Column]));
                }
                set {
                    this[this.table用户取件表.图片数据是否已经处理Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 取件记录ID {
                get {
                    return ((int)(this[this.table用户取件表.取件记录IDColumn]));
                }
                set {
                    this[this.table用户取件表.取件记录IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 清单打印机 {
                get {
                    try {
                        return ((string)(this[this.table用户取件表.清单打印机Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“用户取件表”中列“清单打印机”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table用户取件表.清单打印机Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 取件柜箱组名称 {
                get {
                    if (this.Is取件柜箱组名称Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.table用户取件表.取件柜箱组名称Column]));
                    }
                }
                set {
                    this[this.table用户取件表.取件柜箱组名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is用户卡号Null() {
                return this.IsNull(this.table用户取件表.用户卡号Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set用户卡号Null() {
                this[this.table用户取件表.用户卡号Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is照片内容Null() {
                return this.IsNull(this.table用户取件表.照片内容Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set照片内容Null() {
                this[this.table用户取件表.照片内容Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取件时间Null() {
                return this.IsNull(this.table用户取件表.取件时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取件时间Null() {
                this[this.table用户取件表.取件时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is是否打印发件清单Null() {
                return this.IsNull(this.table用户取件表.是否打印发件清单Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set是否打印发件清单Null() {
                this[this.table用户取件表.是否打印发件清单Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is是否打印取件清单Null() {
                return this.IsNull(this.table用户取件表.是否打印取件清单Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set是否打印取件清单Null() {
                this[this.table用户取件表.是否打印取件清单Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is同步次数Null() {
                return this.IsNull(this.table用户取件表.同步次数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set同步次数Null() {
                this[this.table用户取件表.同步次数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is清单打印机Null() {
                return this.IsNull(this.table用户取件表.清单打印机Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set清单打印机Null() {
                this[this.table用户取件表.清单打印机Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is取件柜箱组名称Null() {
                return this.IsNull(this.table用户取件表.取件柜箱组名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set取件柜箱组名称Null() {
                this[this.table用户取件表.取件柜箱组名称Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class 提示信息Row : global::System.Data.DataRow {
            
            private 提示信息DataTable table提示信息;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal 提示信息Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table提示信息 = ((提示信息DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int 逻辑箱号 {
                get {
                    return ((int)(this[this.table提示信息.逻辑箱号Column]));
                }
                set {
                    this[this.table提示信息.逻辑箱号Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 出差信息 {
                get {
                    return ((string)(this[this.table提示信息.出差信息Column]));
                }
                set {
                    this[this.table提示信息.出差信息Column] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class 预发表RowChangeEvent : global::System.EventArgs {
            
            private 预发表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 预发表RowChangeEvent(预发表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 预发表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class 范围表RowChangeEvent : global::System.EventArgs {
            
            private 范围表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 范围表RowChangeEvent(范围表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 范围表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class 证卡列表RowChangeEvent : global::System.EventArgs {
            
            private 证卡列表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 证卡列表RowChangeEvent(证卡列表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 证卡列表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class 规则策略RowChangeEvent : global::System.EventArgs {
            
            private 规则策略Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 规则策略RowChangeEvent(规则策略Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 规则策略Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class 箱格信息RowChangeEvent : global::System.EventArgs {
            
            private 箱格信息Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 箱格信息RowChangeEvent(箱格信息Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 箱格信息Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class 用户取件表RowChangeEvent : global::System.EventArgs {
            
            private 用户取件表Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 用户取件表RowChangeEvent(用户取件表Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 用户取件表Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class 提示信息RowChangeEvent : global::System.EventArgs {
            
            private 提示信息Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 提示信息RowChangeEvent(提示信息Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public 提示信息Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591